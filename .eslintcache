[{"/Users/kalibry/dev/react-mesto-auth/src/index.js":"1","/Users/kalibry/dev/react-mesto-auth/src/components/App.js":"2","/Users/kalibry/dev/react-mesto-auth/src/components/Main.js":"3","/Users/kalibry/dev/react-mesto-auth/src/components/Header.js":"4","/Users/kalibry/dev/react-mesto-auth/src/components/EditPropfilePopup.js":"5","/Users/kalibry/dev/react-mesto-auth/src/components/Footer.js":"6","/Users/kalibry/dev/react-mesto-auth/src/components/EditAvatarPopup.js":"7","/Users/kalibry/dev/react-mesto-auth/src/components/PopupWithForm.js":"8","/Users/kalibry/dev/react-mesto-auth/src/components/ImagePopup.js":"9","/Users/kalibry/dev/react-mesto-auth/src/components/AddPlacePopup.js":"10","/Users/kalibry/dev/react-mesto-auth/src/utils/Api.js":"11","/Users/kalibry/dev/react-mesto-auth/src/contexts/CurrentUserContext.js":"12","/Users/kalibry/dev/react-mesto-auth/src/components/Card.js":"13","/Users/kalibry/dev/react-mesto-auth/src/components/Register.js":"14","/Users/kalibry/dev/react-mesto-auth/src/components/Login.js":"15","/Users/kalibry/dev/react-mesto-auth/src/components/InfoTooltip.js":"16"},{"size":325,"mtime":1607348745940,"results":"17","hashOfConfig":"18"},{"size":5590,"mtime":1607436757390,"results":"19","hashOfConfig":"18"},{"size":1629,"mtime":1607413526573,"results":"20","hashOfConfig":"18"},{"size":391,"mtime":1607494425291,"results":"21","hashOfConfig":"18"},{"size":2072,"mtime":1607344383937,"results":"22","hashOfConfig":"18"},{"size":238,"mtime":1607344383939,"results":"23","hashOfConfig":"18"},{"size":920,"mtime":1607344383937,"results":"24","hashOfConfig":"18"},{"size":843,"mtime":1607344383944,"results":"25","hashOfConfig":"18"},{"size":703,"mtime":1607344383941,"results":"26","hashOfConfig":"18"},{"size":1148,"mtime":1607344383933,"results":"27","hashOfConfig":"18"},{"size":1985,"mtime":1607344383977,"results":"28","hashOfConfig":"18"},{"size":84,"mtime":1607344383945,"results":"29","hashOfConfig":"18"},{"size":1728,"mtime":1607344383936,"results":"30","hashOfConfig":"18"},{"size":1087,"mtime":1607438190518,"results":"31","hashOfConfig":"18"},{"size":659,"mtime":1607428942877,"results":"32","hashOfConfig":"18"},{"size":882,"mtime":1607437816398,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8br2i0",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kalibry/dev/react-mesto-auth/src/index.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/App.js",["68","69","70"],"import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditPropfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Register from './Register';\nimport Login from './Login';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isSpinnerLoading, setIsSpinnerLoading] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsSpinnerLoading(true);\n      api.getAppInfo('users/me', 'cards')\n        .then((data) => {\n          const [userData, cardsArray] = data;\n          setCards(cardsArray);\n          setCurrentUser(userData);\n          })\n          .catch(err => console.log(`Error ${err}`))\n          .finally(() => {\n            setIsSpinnerLoading(false);\n          });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  \n  function handleEditProfileClick () {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlaceClick () {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleCardClick (card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups () {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    \n    if (selectedCard.link) {\n      setSelectedCard(!selectedCard.link);\n    }\n  }\n\n  function handleCardDelete(id) {\n    api.delete('cards', id)\n    .then(() => {\n      const newCards = cards.filter((c) => {\n        return c._id !== id; \n      });\n      setCards(newCards);\n    })\n    .catch(err => console.log(`Error ${err}`));\n  } \n\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (!isLiked) {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.put('cards/likes', card._id) \n        .then((newCard) => {\n        // Формируем новый массив на основе имеющегося\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n        setCards(newCards);\n        })\n        .catch(err => console.log(`Error ${err}`));\n    } else {\n      api.delete('cards/likes', card._id) \n        .then((newCard) => {\n        // Формируем новый массив на основе имеющегося\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n        setCards(newCards);\n        })\n        .catch(err => console.log(`Error ${err}`));\n    }\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api.updateInfo('users/me', { name, about })\n    .then((data) => {\n      setCurrentUser(data);\n      closeAllPopups();\n    })\n    .catch(err => console.log(`Error ${err}`));\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api.updateAvatar('users/me/avatar', { avatar })\n    .then((data) => {\n      setCurrentUser(data);\n      closeAllPopups();\n    })\n    .catch(err => console.log(`Error ${err}`));\n  }\n\n  function handleAddPlace({ name, link }) {\n    api.addCard('cards', { name, link })\n    .then((newCard) => {\n      setCards([newCard, ...cards]); \n      closeAllPopups();\n    })\n    .catch(err => console.log(`Error ${err}`));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"page\">\n    <Header />\n      <Switch>\n        <Route path=\"/sign-up\">\n          <Register />\n        </Route>\n        <Route path=\"/sign-in\">\n          <Login />\n        </Route>\n        <Route exact path=\"/\">\n        <Main onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onClose={closeAllPopups} \n          onCardClick={handleCardClick} cards={cards} onCardDelete={handleCardDelete} onCardLike={handleCardLike} isLoading={isSpinnerLoading} />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} isClose={isEditProfilePopupOpen} onUpdateUser={handleUpdateUser} /> \n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} isClose={isAddPlacePopupOpen} onAddPlace={handleAddPlace}/>\n        <PopupWithForm name={'confirm-card-del'} title={'Вы уверены?'} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} isClose={isEditAvatarPopupOpen} onCardClick={handleCardClick} onUpdateAvatar={handleUpdateAvatar}/> \n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n          {/* {isLoggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/login\" />}  */}\n          </Route>\n      </Switch>\n      <Footer />\n    </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App;\n\n",["71","72"],"/Users/kalibry/dev/react-mesto-auth/src/components/Main.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/Header.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/EditPropfilePopup.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/Footer.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/EditAvatarPopup.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/PopupWithForm.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/ImagePopup.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/AddPlacePopup.js",[],"/Users/kalibry/dev/react-mesto-auth/src/utils/Api.js",[],"/Users/kalibry/dev/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/Card.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/Register.js",["73"],"/Users/kalibry/dev/react-mesto-auth/src/components/Login.js",[],"/Users/kalibry/dev/react-mesto-auth/src/components/InfoTooltip.js",[],{"ruleId":"74","severity":1,"message":"75","line":2,"column":25,"nodeType":"76","messageId":"77","endLine":2,"endColumn":33},{"ruleId":"74","severity":1,"message":"78","line":25,"column":10,"nodeType":"76","messageId":"77","endLine":25,"endColumn":20},{"ruleId":"74","severity":1,"message":"79","line":25,"column":22,"nodeType":"76","messageId":"77","endLine":25,"endColumn":35},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"74","severity":1,"message":"84","line":6,"column":12,"nodeType":"76","messageId":"77","endLine":6,"endColumn":24},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'handleSubmit' is defined but never used.","no-global-assign","no-unsafe-negation"]